<?php
/**
 * @file
 * Contains rightclick_field_collection_highlighted.module
 */

use \Drupal\file\Entity\File;
use \Drupal\image\Entity\ImageStyle;

/*
 * Implements hook_preprocess_HOOK().
 * Add inline css style for background images
 */
function rightclick_field_collection_highlighted_preprocess_field(&$variables) {

  /*
   * "field_high_slides" - Check if field collection exist and add CSS class to field items
   */
  if ($variables['field_name'] == 'field_high_slides') {

    /*
     * Add a common CSS class for Slides
     */
    $variables['attributes']['class'][] = 'high-slides';

    /*
     * MASTER TITLE REMOVED
     * Check if Master title exist and unset Slide Titles
     */
//    $parent_id = $variables['element']['#object']->id();
//    $parent_entity_type = $variables['element']['#object']->getEntityTypeId();
//    $storage = \Drupal::entityManager()->getStorage($parent_entity_type);
//    $parent_entity = $storage->load($parent_id);
//    $parent_entity_title = $parent_entity->get('field_high_title')
//      ->getValue()[0]['value'];

    /*
     * "field_high_slides" - Hide field collection slides Label
     * We can not hide title from node field display UI because field is hidden
     */
    $variables['label_display'] = 'hidden';
    $variables['label_hidden'] = TRUE;

    /*
     * Check if there is more than one slide and add OWL Slider library
     */
    if (count($variables['items']) >= 2) {
      $variables['attributes']['class'][] = 'high-slides-owl';
      $variables['#attached']['library'][] = 'rightclick_field_collection_highlighted/owlcarousel.jquery';
      $variables['#attached']['library'][] = 'rightclick_field_collection_highlighted/owlcarousel';
    }

    foreach ($variables['items'] as $key => &$item) {
      /*
       * Add a common class to Slide collection item
       */
      $item['attributes']->addClass('high-slide');

      /*
       * Add Theme background class to Slide collection field item
       */
      $themebg = $item['content']['#field_collection_item']->get('field_high_slide_themebg')
        ->getValue()[0]['value'];
      if ($themebg) {
        $item['attributes']->addClass($themebg);
      }

      /*
       * Add Mask class to Slide collection field item
       */
      $mask = $item['content']['#field_collection_item']->get('field_high_slide_mask')
        ->getValue()[0]['value'];
      if ($themebg) {
        $item['attributes']->addClass('mask-' . $mask, 'mask');
      }

      /*
       * MASTER TITLE REMOVED
       * Check if Master title exist and unset slide titles
       */
//      if ($parent_entity_title) {
//        $item['content']['#field_collection_item']->__unset('field_high_slide_title');
//      }
    }
  }

  /*
   * "field_high_slide_img"
   * add CSS classes and inline background images
   */
  if ($variables['field_name'] == 'field_high_slide_img') {

    /*
     * Add field Wrapper Class just in case there is multiple images
     */
    $variables['attributes']['class'][] = 'high-slide-imgs';

    foreach ($variables['items'] as $key => &$item) {
      /*
       * Get image(s) and URIs
       */
      $img_id = ($item['content']['#item']->getValue()['target_id']);
      $img_uri = File::load($img_id)->getFileUri();
      $mobile_uri = ImageStyle::load('hl_mobile')->buildUrl($img_uri);
      $tablet_uri = ImageStyle::load('hl_tablet')->buildUrl($img_uri);
      $desktop_uri = ImageStyle::load('hl_desktop')->buildUrl($img_uri);

      /*
       * Add class to field item container
       */
      $item['attributes']->addClass('high-slide-bgimg', 'bgimg-' . $img_id);

      /*
       * Add background images with inline css, in the header.
       * TODO: fix media queries
       */
      $css = '
        .high_slide_bgimg-' . $img_id . ' picture,
        .bgimg-' . $img_id . ' img{
          visibility: hidden
        }
        @media (max-width: 767px) {
          .bgimg-' . $img_id . ' {
            background-image: url(' . $mobile_uri . ');
          }
        }
        @media (min-width: 768px) and (max-width: 1023px) {
          .bgimg-' . $img_id . ' {
            background-image: url(' . $tablet_uri . ');
          }
        }
        @media (min-width: 1024px) {
          .bgimg-' . $img_id . ' {
            background-image: url(' . $desktop_uri . ');
          }
        }         
      ';

      $variables['#attached']['html_head'][] = [
        [
          '#tag' => 'style',
          /*      '#attributes' => [
                  'media' => $media_query
                ],*/
          '#value' => $css
        ],
        'bg_image_formatter_css_' . $img_id
      ];
    }

  }

  /*
   * "field_high_title" and "field_high_slide_title"
   * add a common CSS class and a Wrapper at Titles to center vertical
   */
  if ($variables['field_name'] == 'field_high_title' || $variables['field_name'] == 'field_high_slide_title') {
    /*
     * MASTER TITLE REMOVED
     * "field_high_title" - Unset field label
     * We can not hide title from node field display UI because field is hidden
     */
//    $variables['label_display'] = 'hidden';
//    $variables['label_hidden'] = TRUE;

    $variables['items'][0]['content']['#theme_wrappers']['container'] = array();
    $variables['attributes']['class'][] = 'high-title';
  }

  /*
   * "field_high_slide_text"
   * add CSS classes and inline background images
   */
  if ($variables['field_name'] == 'field_high_slide_text') {
    $variables['attributes']['class'][] = 'high-slide-text';
  }

}
